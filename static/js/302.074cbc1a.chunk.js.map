{"version":3,"file":"static/js/302.074cbc1a.chunk.js","mappings":"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","sources":["pages/ArticleDetailsPage/ArticleDetailsPage.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './ArticleDetailsPage.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useParams } from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport cn from 'classnames';\nimport SlidesList from 'components/SlidesList/SlidesList';\nimport Arrows from 'components/Arrows/Arrows';\nimport Dots from 'components/Dots/Dots';\nimport changeSlide from 'lib/changeSlide/changeSlide';\nimport Slide from 'components/Slide/Slide';\nimport routs from 'config/routeConfig/routeConfig';\nimport { Helmet } from 'react-helmet';\n\nconst INITIAL_SLIDE = 0;\nconst INITIAL_NUMBER_SLIDES = 2;\n\nconst ArticleDetailsPage = (props) => {\n  const { data } = props;\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const items = data.articles;\n  const [slide, setSlide] = useState(INITIAL_SLIDE);\n  const [nextSlide, setNextSlide] = useState(slide + 1);\n  const [animationDirection, setAnimationDirection] = useState(null);\n  const [itemsDisplayed, setItemsDisplayed] = useState(INITIAL_NUMBER_SLIDES);\n  const newSlideRef = useRef(null);\n\n  useEffect(() => {\n    document.documentElement.dataset.page = 'article';\n    window.scrollTo(0, 0);\n  }, [id]);\n\n  useEffect(() => {\n    if (itemsDisplayed > INITIAL_NUMBER_SLIDES) {\n      newSlideRef.current?.scrollIntoView();\n    }\n  }, [itemsDisplayed]);\n\n  useEffect(() => {\n    const media = window.matchMedia('(max-width: 1023px)');\n\n    if (media.matches !== isMobile) {\n      setIsMobile(media.matches);\n    }\n\n    const listener = () => setIsMobile(media.matches);\n    window.addEventListener('resize', listener);\n\n    return () => window.removeEventListener('resize', listener);\n  }, [isMobile]);\n\n  const currentArticle = items.find((item) => (\n    item.id === id\n  ));\n\n  const img = new Image();\n  img.src = currentArticle.url;\n  img.onload = () => setIsLoaded(true);\n\n  const filteredItems = items.filter((item) => item.id !== id);\n\n  const handleChangeSlide = (direction) => {\n    setAnimationDirection(null);\n\n    const {\n      currentSlideNumber,\n      nextSlideNumber,\n    } = changeSlide(direction, slide, filteredItems);\n\n    setSlide(currentSlideNumber);\n    setNextSlide(nextSlideNumber);\n\n    const timeout = setTimeout(() => {\n      setAnimationDirection(() => direction);\n    }, 0);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  };\n\n  const handleClick = () => {\n    if (itemsDisplayed < filteredItems.length) {\n      setItemsDisplayed((prev) => prev + 1);\n    }\n  };\n\n  const slides = filteredItems.map((item, index) => {\n    if (index < itemsDisplayed) {\n      return (\n        <Slide\n          ref={index === itemsDisplayed - 1 ? newSlideRef : null}\n          data={item}\n          isMobile={isMobile}\n          key={item.id}\n        />\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div className=\"article-details\">\n      <Helmet>\n        <title>{currentArticle.title}</title>\n      </Helmet>\n      <div className=\"content-wrapper content-wrapper-flex\">\n        <h2 className=\"article-details__title\">\n          {t('interestingTurkey')}\n        </h2>\n        <div className=\"article-details__box-content\">\n          {\n            isLoaded\n              ? <img className=\"article-details__image\" src={img.src} alt={currentArticle.title} />\n              : (\n                <div className=\"article-details__spinner_box\">\n                  <Spinner />\n                </div>\n              )\n          }\n          <h2 className=\"article-details__article-title\">{currentArticle.title}</h2>\n          <p className=\"article-details__date\">{currentArticle.date}</p>\n          <p className=\"article-details__text\">{currentArticle.text}</p>\n          <div className=\"article-details__box-links\">\n            <Link to={routs.contactPath} className=\"article-details__contact-link article-details__contact-link-my-contacts\">\n              {t('myContacts')}\n            </Link>\n            <Link to={routs.servicesPath} className=\"article-details__contact-link article-details__contact-link-my-services\">\n              {t('myServices')}\n            </Link>\n          </div>\n        </div>\n      </div>\n      <div className=\"slider-details\">\n        <div className=\"content-wrapper content-wrapper-flex\">\n          {\n            !isMobile ? (\n              <>\n                <SlidesList\n                  currentItem={slide}\n                  nextItem={nextSlide}\n                  items={filteredItems}\n                  animationDirection={animationDirection}\n                />\n                <Arrows\n                  items={filteredItems}\n                  onChangeItem={handleChangeSlide}\n                >\n                  <Dots\n                    items={filteredItems}\n                    activeItem={slide}\n                  />\n                </Arrows>\n              </>\n            ) : (\n              <>\n                {slides}\n                {\n                  itemsDisplayed !== filteredItems.length ? (\n                    <button\n                      className={cn('article-details__btn', { hidden: !filteredItems.length })}\n                      type=\"button\"\n                      onClick={() => handleClick()}\n                    >\n                      {t('showMore')}\n                    </button>\n                  )\n                    : null\n                }\n              </>\n            )\n          }\n        </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default ArticleDetailsPage;\n"],"names":["props","data","t","useTranslation","id","useParams","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","isMobile","setIsMobile","items","articles","_useState5","_useState6","slide","setSlide","_useState7","_useState8","nextSlide","setNextSlide","_useState9","_useState10","animationDirection","setAnimationDirection","_useState11","_useState12","itemsDisplayed","setItemsDisplayed","newSlideRef","useRef","useEffect","document","documentElement","dataset","page","window","scrollTo","_newSlideRef$current","current","scrollIntoView","media","matchMedia","matches","listener","addEventListener","removeEventListener","currentArticle","find","item","img","Image","src","url","onload","filteredItems","filter","slides","map","index","_jsx","Slide","ref","_jsxs","className","children","Helmet","title","alt","Spinner","date","text","Link","to","routs","contactPath","servicesPath","_Fragment","length","cn","hidden","type","onClick","prev","SlidesList","currentItem","nextItem","Arrows","onChangeItem","direction","_changeSlide","changeSlide","currentSlideNumber","nextSlideNumber","timeout","setTimeout","clearTimeout","Dots","activeItem"],"sourceRoot":""}