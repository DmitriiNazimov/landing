{"version":3,"file":"static/js/567.6177c5f6.chunk.js","mappings":"yQAwEA,EA7D2B,SAACA,GAC1B,IAAQC,EAASD,EAATC,KACAC,GAAMC,EAAAA,EAAAA,MAAND,EACAE,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA0BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAiBf,EAAKgB,OAAOC,MAAK,SAACC,GAAK,OAC5CA,EAAMf,KAAOA,CAAE,IAiBjB,OAdAgB,EAAAA,EAAAA,YAAU,WACRC,SAASC,gBAAgBC,QAAQC,KAAO,UACxCC,OAAOC,SAAS,EAAG,EACrB,GAAG,CAACtB,KAEJgB,EAAAA,EAAAA,YAAU,WACR,IAAMO,EAAM,IAAIC,MAChBD,EAAIE,IAAMb,EAAec,IACzBH,EAAII,OAAS,WACXhB,EAASY,GACThB,GAAY,EACd,CACF,GAAG,KAGDqB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,GAAAG,OAAWrB,EAAe,uBAE5BgB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SACnClB,EAAesB,SAElBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BC,SAAA,CAEzCxB,GACIyB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAyBJ,IAAKf,EAAMe,IAAKU,IAAKvB,EAAesB,SAE5EH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,+BAA8BC,UAC3CC,EAAAA,EAAAA,KAACK,EAAAA,EAAO,OAIhBL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iCAAgCC,SAAElB,EAAe,oBAC/DmB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAElB,EAAeyB,QACrDN,EAAAA,EAAAA,KAAA,KAAGF,UAAU,wBAAuBC,SAAElB,EAAe0B,QACrDV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAMC,YAAab,UAAU,0EAAyEC,SAC7GhC,EAAE,iBAELiC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAIC,EAAAA,EAAME,aAAcd,UAAU,0EAAyEC,SAC9GhC,EAAE,8BAOjB,C","sources":["pages/ServiceDetailsPage/ServiceDetailsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './ServiceDetailsPage.scss';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Link,\n  useParams,\n} from 'react-router-dom';\nimport Spinner from 'components/Spinner/Spinner';\nimport routs from 'config/routeConfig/routeConfig';\nimport { Helmet } from 'react-helmet';\n\nconst ServiceDetailsPage = (props) => {\n  const { data } = props;\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [image, setImage] = useState();\n\n  const currentService = data.blocks.find((block) => (\n    block.id === id\n  ));\n\n  useEffect(() => {\n    document.documentElement.dataset.page = 'article';\n    window.scrollTo(0, 0);\n  }, [id]);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = currentService.url;\n    img.onload = () => {\n      setImage(img);\n      setIsLoaded(true);\n    };\n  }, []);\n\n  return (\n    <div className=\"service-details\">\n      <Helmet>\n        <title>{`${currentService['title-article']}`}</title>\n      </Helmet>\n      <div className=\"content-wrapper content-wrapper-flex\">\n        <h2 className=\"service-details__title\">\n          {currentService.title}\n        </h2>\n        <div className=\"service-details__box-content\">\n          {\n            isLoaded\n              ? <img className=\"service-details__image\" src={image.src} alt={currentService.title} />\n              : (\n                <div className=\"service-details__spinner-box\">\n                  <Spinner />\n                </div>\n              )\n          }\n          <h2 className=\"service-details__service-title\">{currentService['title-article']}</h2>\n          <p className=\"service-details__date\">{currentService.date}</p>\n          <p className=\"service-details__text\">{currentService.text}</p>\n          <div className=\"service-details__box-links\">\n            <Link to={routs.contactPath} className=\"service-details__contact-link service-details__contact-link-my-contacts\">\n              {t('myContacts')}\n            </Link>\n            <Link to={routs.servicesPath} className=\"service-details__contact-link service-details__contact-link-my-services\">\n              {t('otherServices')}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceDetailsPage;\n"],"names":["props","data","t","useTranslation","id","useParams","_useState","useState","_useState2","_slicedToArray","isLoaded","setIsLoaded","_useState3","_useState4","image","setImage","currentService","blocks","find","block","useEffect","document","documentElement","dataset","page","window","scrollTo","img","Image","src","url","onload","_jsxs","className","children","_jsx","Helmet","concat","title","alt","Spinner","date","text","Link","to","routs","contactPath","servicesPath"],"sourceRoot":""}